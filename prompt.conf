# my awesome prompt
# thanks to https://github.com/cowboy/dotfiles
# for helping me make it to the next level

if [[ ! "${prompt_colors[@]}" ]]; then
  prompt_colors=(
    "36" # information color
    "37" # bracket color
    "31" # error color
  )

  if [[ "$SSH_TTY" ]]; then
    # connected via ssh
    prompt_colors[0]="32"
  elif [[ "$USER" == "root" ]]; then
    # logged in as root
    prompt_colors[0]="35"
  fi
fi

# Inside a prompt function, run this alias to setup local $c0-$c9 color vars.
alias prompt_getcolors='prompt_colors[9]=; local i; for i in ${!prompt_colors[@]}; do local c$i="\[\e[0;${prompt_colors[$i]}m\]"; done'


# Exit code of previous command.
function prompt_exitcode() {
  prompt_getcolors
  [[ $1 != 0 ]] && echo "$c2$1$c9 "
}

# Git status.
function prompt_git() {
  prompt_getcolors
  local status output flags
  status="$(git status 2>/dev/null)"
  [[ $? != 0 ]] && return;
  output="$(echo "$status" | awk '/# Initial commit/ {print "(init)"}')"
  [[ "$output" ]] || output="$(echo "$status" | awk '/# On branch/ {print $4}')"
  [[ "$output" ]] || output="$(git branch | perl -ne '/^\* (.*)/ && print $1')"
  flags="$(
    echo "$status" | awk 'BEGIN {r=""} \
      /^# Changes to be committed:$/        {r=r "+"}\
      /^# Changes not staged for commit:$/  {r=r "!"}\
      /^# Untracked files:$/                {r=r "?"}\
      END {print r}'
  )"
  if [[ "$flags" ]]; then
    output="$output${COLOR_GRAY}:${COLOR_NONE}${COLOR_BROWN}$flags"
  fi
  echo "${COLOR_GRAY}(${COLOR_NONE}${COLOR_BROWN}$output${COLOR_GRAY})${COLOR_NONE} "
}

# SVN info.
function prompt_svn() {
  prompt_getcolors
  local info="$(svn info . 2> /dev/null)"
  local last current
  if [[ "$info" ]]; then
    last="$(echo "$info" | awk '/Last Changed Rev:/ {print $4}')"
    current="$(echo "$info" | awk '/Revision:/ {print $2}')"
    echo "${COLOR_GRAY}(${COLOR_BROWN}$last${COLOR_GRAY}:${COLOR_BROWN}$current${COLOR_GRAY})${COLOR_NONE} "
  fi
}

function prompt_virtualenv() {
  if [[ "$VIRTUAL_ENV" != "" ]]; then
    echo "${COLOR_GRAY}(${COLOR_GREEN}$(basename $VIRTUAL_ENV)${COLOR_NONE}${COLOR_GRAY})${COLOR_NONE} "
  fi
}

function show_time() {
 echo "${COLOR_GRAY}$(date +%H:%M)${COLOR_NONE}"
}

function prompt_color(){
  echo "${COLOR_LIGHT_GRAY}"
}

# Maintain a per-execution call stack.
prompt_stack=()
trap 'prompt_stack=("${prompt_stack[@]}" "$BASH_COMMAND")' DEBUG

# write newline only all but first 
function newline() {
  [[ -z "$FIRST" ]] && echo "" || echo "\n"
}
# ensure no newline on clear screen
alias clear="export FIRST=''; clear"

function prompt_command() {
  local exit_code=$?
  # If the first command in the stack is prompt_command, no command was run.
  # Set exit_code to 0 and reset the stack.
  [[ "${prompt_stack[0]}" == "prompt_command" ]] && exit_code=0
  prompt_stack=()

  # Manually load z here, after $? is checked, to keep $? from being clobbered.
  [[ "$(type -t _z)" ]] && _z --add "$(pwd -P 2>/dev/null)" 2>/dev/null

  # While the simple_prompt environment var is set, disable the awesome prompt.
  [[ "$simple_prompt" ]] && PS1='\n$ ' && return

  prompt_getcolors
  # http://twitter.com/cowboy/status/150254030654939137
  # PS1="$(show_time) "    
  PS1="$(newline)"
  export FIRST="first"
  PS1="$PS1$(prompt_virtualenv)"
  PS1="$PS1$(prompt_svn)"
  PS1="$PS1$(prompt_git)"
  # svn: [repo:lastchanged]
  PS1="$PS1${COLOR_GRAY}[${COLOR_NONE}"'$(prompt_color)'
  PS1="$PS1\u${COLOR_NONE}${COLOR_GRAY}@${COLOR_NONE}"
  PS1="$PS1"'$(prompt_color)'"\h${COLOR_NONE}${COLOR_GRAY}]${COLOR_NONE} "
  PS1="$PS1${COLOR_GRAY}\w${COLOR_NONE}\n"
  PS1="$PS1$(prompt_exitcode "$exit_code")"
  PS1="$PS1${PROMPT_SYMBOL} "
  # git: [branch:flags]
  # misc: [cmd#:hist#]
  # PS1="$PS1$c1[$c0#\#$c1:$c0!\!$c1]$c9"
  # path: [user@host:path]
  # PS1="$PS1$c1[$c0\u$c1@$c0\h$c1:$c0\w$c1]$c9"
  # PS1="$PS1\n"
  # # date: [HH:MM:SS]
  # PS1="$PS1$c1[$c0$(date +"%H$c1:$c0%M$c1:$c0%S")$c1]$c9"
  # # exit code: 127
  # PS1="$PS1 \$ "
}

PROMPT_COMMAND="prompt_command"
